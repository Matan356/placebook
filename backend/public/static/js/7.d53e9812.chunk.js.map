{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","end","type","onClick","disabled","ModalOverlay","content","style","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","ReactDOM","createPortal","document","getElementById","Modal","Fragment","show","onCancel","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","error","onClear","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","fileIsValid","files","pickedFile","resizeFile","image","Promise","resolve","Resizer","imageFileResizer","uri","ref","display","accept","center","src","alt","click","NewPlace","auth","useContext","AuthContext","seePlacesMassage","title","description","address","inputHandler","navigate","useNavigate","placeSubmitHandler","formData","FormData","append","process","Authorization","token","localStorage","setItem","asOverlay"],"mappings":"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","file":"static/js/7.d53e9812.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.end}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nconst specificError = \"Could not find places for the provided user id.\";\n\nconst ErrorModal = (props) => {\n    if (props.error === specificError ) {\n      return (\n        <Modal\n        onCancel={props.onClear}\n        header=\"An Error Occurred!\"\n        show={!!props.error}\n        footer={\n          <Button to=\"/\" onClick={props.onClear}>\n            Okay\n          </Button>\n        }\n      >\n        <p>{props.error}</p>\n      </Modal>\n      );\n    } else {\n      return    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={\n        <Button onClick={props.onClear}>\n          Okay\n        </Button>\n      }\n    >\n      <p>{props.error}</p>\n    </Modal>;\n  };\n};\n\nexport const massageModal = (props)=>{\n  return (\n    <Modal\n    onCancel={props.onClear}\n    header={props.header}\n    show={props.massage}\n    footer={\n      <Button  onClick={props.onClear}>\n        Okay\n      </Button>\n    }\n  >\n    <p>{props.error}</p>\n  </Modal>\n  );\n}\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json(); \n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid \n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React, { useRef, useState, useEffect } from \"react\";\nimport Resizer from \"react-image-file-resizer\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = async (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    let image = await resizeFile(pickedFile);\n    props.onInput(props.id, image, fileIsValid);\n  };\n\n  const resizeFile = (file) =>\n    new Promise((resolve) => {\n      Resizer.imageFileResizer(\n        file,\n        512,\n        512,\n        \"JPEG\",\n        100,\n        0,\n        (uri) => {\n          resolve(uri);\n        },\n        \"base64\"\n      );\n    });\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [seePlacesMassage]= useState();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }, \n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\nconst navigate = useNavigate();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places`, 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n    localStorage.setItem(\"seePlacesMassage\", seePlacesMassage);\n\n      navigate('/')\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"sourceRoot":""}